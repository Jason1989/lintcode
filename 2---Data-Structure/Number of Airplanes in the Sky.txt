Question:Given an interval list which are flying and landing time of the flight. How many airplanes are on the sky at most?

Example
For interval list

[
  [1,10],
  [2,3],
  [5,8],
  [4,7]
]
Return 3

解题思路：该题是典型的扫描线的问题。将所有的区间在坐标中表示出来的话，可以组成一系列的矩形相交。将区间拆分，分为起始点和结束点，将list重新组成点的集合，
并按点的位置以及是开始还是结束进行排序，扫描该集合，遇到开始点，飞机数目加一，遇到结束点，飞机数目减一，通过一个变量维护最大飞机数目。
实际遇到该问题的时候，需要考虑到在同一点，有开始有结束，是先加还是先减。

class Solution {
    /**
     * @param intervals: An interval array
     * @return: Count of airplanes are in the sky.
     */
    public int countOfAirplanes(List<Interval> airplanes) { 
        if(airplanes == null || airplanes.size() == 0) return 0;
        List<Point> points = new ArrayList<>();
        for(Interval interval : airplanes){
            Point p1 = new Point(interval.start, 1);
            Point p2 = new Point(interval.end, -1);
            points.add(p1);
            points.add(p2);
        }
        Collections.sort(points, new PointComparator());
        int res = 0;
        int max = 0;
        for(Point p : points){
            if(p.flag == 1){
                res++;
            }else{
                res--;
            }
            max = Math.max(max, res);
        }
        return max;
    }
}

class Point{
    
    int index;
    int flag;
    
    Point(int index, int flag){
        this.index = index;
        this.flag = flag;
    }
    
}

class PointComparator implements Comparator<Point>{
    
    public int compare(Point i1, Point i2){
        if(i1.index < i2.index){
            return -1;
        }else if(i1.index > i2.index){
            return 1;
        }else{
            return i1.flag - i2.flag;
        }
    }    
    
}
